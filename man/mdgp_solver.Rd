% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/socialroulette.R
\name{mdgp_solver}
\alias{mdgp_solver}
\title{Maximally diverse grouping problem solver based on Lai and Hao (2016)}
\usage{
mdgp_solver(mdgp_format_file, time_limit = 30)
}
\arguments{
\item{mdgp_format_file}{Path to the file containing the MDGP specification in mdgplib format}

\item{time_limit}{Number of seconds to iteratively optimize each run. The larger the number of participants to group, the larger this value should be. Rule of thumb: time_limit = exp(0.5 + 0.0025*n)}
}
\value{
File name of the solution file
}
\description{
Given a distance metric for each possible pair in the frame of n individuals,
find a partition into as many groups as possible with group size at least m. This
is an instance of the maximallz diverse grouping problem, which we use the algorithm
by Lai and Hao (2016) to solve.
}
\details{
The maximally diverse grouping problem is about partitioning \eqn{n} individuals
into groups of size at least \eqn{m} while maximizing a sum of utility values computed
by summing the utility \eqn{u(i,j)} over all individuals \eqn{i},\eqn{j} partitioned into the same group.
and summing this quantity over all groups. More formally, let \eqn{d_{ij}} denote the number of
time unit (typically days) ago, that individual \eqn{i} and \eqn{j} were in the same group.
Note: This distance is derived by looking at the previous partitions and it is a matter
of definition what this value should be, if \eqn{i} and \eqn{j} have not previously been
in the same group. Let \eqn{G=n\> \text{div}\> m} denote the resulting number of groups where \eqn{\text{div}} denotes integer division.
For a given partition let \eqn{x_{ig}} be an indicator variable, which is 1, if \eqn{i} is assigned into
group \eqn{g} and zero otherwise.
A solver of the maximally diverse grouping problem now tries to maximize
\deqn{\sum_{g=1}^G \sum_{i=1}^n \sum_{j=i+1}^n d_{ij} x_{ig} x_{jg},}
subject to the conditions
\deqn{\sum_{g=1}^{G} x_{ig} = 1, \quad i=1,\ldots,n,}
\deqn{\sum_{i=1}^n x_{ig} = n_g, \quad g=1,\ldots,G,}
\deqn{x_{ig} \in \{0,1\}, \quad i=1,\ldots,n; g=1,\ldots,G,}
where \eqn{n_g} is the size of group \eqn{g}, i.e. \eqn{\sum_{g=1}^G n_g = n}. We shall adopt the convention
that group sizes are determined by assigning the labels \eqn{1,\ldots,G} to all individuals and then count
how often each label occurs. This means, e.g., that for \eqn{n=7} and \eqn{m=4} we get \eqn{n_g=7\> \text{div}\> 4=1} group with 7 members.

Note: The code calls C++ code by Xiangjing Lai and Jin-Kao Hao,
for this several temporary files are generated using `tempfile()`.
}
\references{
Xiangjing Lai and Jin-Kao Hao (2016). *Iterated maxima search for the maximally
diverse grouping problem*. European Journal of Operational Research, 254(3), pp. 780-800,
https://doi.org/10.1016/j.ejor.2016.05.018
}
\author{
Xiangjing Lai and Jin-Kao Hao, R interface by M. HÃ¶hle
}
